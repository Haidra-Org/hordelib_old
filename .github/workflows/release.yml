name: hordelib build and publish

on:
  push:
    branches:
      - releases

jobs:
  build-n-publish:
    name: hordelib build and publish
    runs-on: ubuntu-latest
    steps:

    # Version bumps the project and creates a tag by creating
    # a github release. The github release itself is not so
    # interesting, as it's incomplete because we haven't finished
    # the build. The important goal here is a pypi release and this
    # get us our version number.
    - name: "📣 Release on push"
      id: release
      uses: rymndhng/release-on-push-action@v0.28.0
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        bump_version_scheme: patch
        use_github_release_notes: true

    - name: "✔️ Checkout"
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    # Pass the version number in an env var to the below steps
    - name: Set build version env var
      run: echo "SETUPTOOLS_SCM_PRETEND_VERSION=${{ steps.release.outputs.version }}" >> $GITHUB_ENV

    # We need python...
    - name: "🐍 Set up Python 3.10"
      if: ${{ steps.release.outputs.version != '' }}
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"

    # Install build deps
    - name: "🛠 Install pypa/build"
      if: ${{ steps.release.outputs.version != '' }}
      run: >-
        python -m pip install build loguru --user

    - name: "✏️ Install changelog dependencies"
      if: ${{ steps.release.outputs.version != '' }}
      uses: actions/setup-node@v3

    - name: "✏️ Generate release changelog"
      if: ${{ steps.release.outputs.version != '' }}
      run: |
        npm -g install auto-changelog
        auto-changelog --template=.changelog --ignore-commit-pattern="update changelog|version bump|Merge pull"

    # Try to add the changelog back to the releases branch
    - uses: EndBug/add-and-commit@v9
      with:
        add: 'CHANGELOG.md'
        message: 'ci: update changelog'
        committer_name: GitHub Actions
        committer_email: actions@github.com

    # Patches our requirements.txt and pyproject.toml
    # Build a changelog
    - name: "🔧 Prepare our build for release"
      if: ${{ steps.release.outputs.version != '' }}
      run: >-
        python build_helper.py

    # Build a pypi distribution using the env var version number
    - name: "🔧 Build a binary wheel and a source tarball"
      if: ${{ steps.release.outputs.version != '' }}
      run: >-
        python -m build --sdist --wheel --outdir dist/ .

    # Publish the package
    - name: "📦 Publish distribution to PyPI"
      if: ${{ steps.release.outputs.version != '' }}
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.PYPI_API_TOKEN }}

    # # TODO: Once we make it official
    # - name: "Inform with Discord Webhook"
    #   if: ${{ steps.release.outputs.version != '' }}
    #   uses: tsickert/discord-webhook@v5.3.0
    #   with:
    #     webhook-url: ${{ secrets.DISCORD_WEBHOOK_URL }}
    #     content: "New version of hordelib has been published to pypi: ${{ steps.release.outputs.version }}"